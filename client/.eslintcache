[{"/mnt/c/Users/ash_k/Projects/MERN/roster_project/client/src/App.js":"1","/mnt/c/Users/ash_k/Projects/MERN/roster_project/client/src/components/AppNavbar.js":"2","/mnt/c/Users/ash_k/Projects/MERN/roster_project/client/src/reportWebVitals.js":"3","/mnt/c/Users/ash_k/Projects/MERN/roster_project/client/src/components/DayEntry.js":"4","/mnt/c/Users/ash_k/Projects/MERN/roster_project/client/src/index.js":"5","/mnt/c/Users/ash_k/Projects/MERN/roster_project/client/src/components/Calendar.js":"6","/mnt/c/Users/ash_k/Projects/MERN/roster_project/client/src/js/utility.js":"7"},{"size":359,"mtime":1610863059325,"results":"8","hashOfConfig":"9"},{"size":878,"mtime":1610434599065,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1610352463511,"results":"11","hashOfConfig":"9"},{"size":637,"mtime":1611281795622,"results":"12","hashOfConfig":"9"},{"size":500,"mtime":1610352463501,"results":"13","hashOfConfig":"9"},{"size":1322,"mtime":1611292242654,"results":"14","hashOfConfig":"9"},{"size":3601,"mtime":1611281370402,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"bbyjoy",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},"/mnt/c/Users/ash_k/Projects/MERN/roster_project/client/src/App.js",[],"/mnt/c/Users/ash_k/Projects/MERN/roster_project/client/src/components/AppNavbar.js",[],"/mnt/c/Users/ash_k/Projects/MERN/roster_project/client/src/reportWebVitals.js",[],"/mnt/c/Users/ash_k/Projects/MERN/roster_project/client/src/components/DayEntry.js",["31","32"],"/mnt/c/Users/ash_k/Projects/MERN/roster_project/client/src/index.js",[],"/mnt/c/Users/ash_k/Projects/MERN/roster_project/client/src/components/Calendar.js",[],"/mnt/c/Users/ash_k/Projects/MERN/roster_project/client/src/js/utility.js",["33"],"// utility funtions for Calendar component\nexport function getCurrentMonth(year, month, day) {\n  const getCurrentDate = new Date(year, month, day);\n  const currentMonthIndex = getCurrentDate.getMonth();\n  const currentYear = getCurrentDate.getFullYear();\n  const months = [\n    \"January\",\n    \"Febuary\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ];\n\n  const currentMonth = months[currentMonthIndex];\n\n  // const firstOfMonth = new Date(`${currentMonth} 1, ${currentYear}`);\n  // const monthStartDayIndex = firstOfMonth.getDay();\n  // // may need to make offSetDateIndex a function\n  // let offSetDateIndex = monthStartDayIndex - 1 < 0 ? 6 : monthStartDayIndex - 1;\n  // const monthStartDay = days[offSetDateIndex];\n\n  // function to determine number of days in a given month\n  // use non-zero index for month here\n  return currentMonth;\n}\n// week -> row\n// day that month starts on\n// how many days in month -> how many weeks\n// easier to just build a 7x6 grid and populate with dates => then shift data\n\n// build array of dates based on current month then add to a grid of 7x6 'days'\n\n// what do i need to produce here...\n// an array that looks like this [29, 30, 31, 1, 2, 3, ..., 31]\n// -> alternatively i could have an array of weeks?\n// -> [[29, 30, 31, 1, 2, 3, 4], [5, 6, 7, ...], ...];\n// so i need currentmonth, number of days in currentmonth, number of days in\n// previous month, day that current month starts on.\n// When i start looping i will need to keep track of the weeks in some way.\n\nexport function getDateArray(currMonth, currYear) {\n  function daysInMonth(month, year) {\n    return new Date(year, month, 0).getDate();\n  }\n  let dateArray = [];\n  let firstOfMonth = new Date(currYear, currMonth);\n  let monthStartDayIndex = firstOfMonth.getDay();\n  let offSetDateIndex = monthStartDayIndex - 1 < 0 ? 6 : monthStartDayIndex - 1;\n  let currentMonthOffset = currMonth + 1 > 12 ? 1 : currMonth + 1;\n  let previousMonthIndexOffset =\n    currentMonthOffset - 1 < 0 ? 11 : currentMonthOffset - 1;\n  let daysInPreviousMonth = daysInMonth(previousMonthIndexOffset, currYear);\n  let daysInCurrentMonth = daysInMonth(currentMonthOffset, currYear);\n  let dayNumber = daysInPreviousMonth - offSetDateIndex + 1;\n\n  for (let i = dayNumber; i <= daysInPreviousMonth; i++) {\n    dateArray.push({\n      day: dayNumber,\n      dayId: `${previousMonthIndexOffset}${dayNumber}`,\n    });\n    dayNumber++;\n    if (dayNumber > daysInPreviousMonth) {\n      dayNumber = 1;\n      break;\n    }\n  }\n\n  for (let i = dayNumber; i <= daysInCurrentMonth; i++) {\n    dateArray.push({\n      day: dayNumber,\n      dayId: `${currentMonthOffset}${dayNumber}`,\n    });\n    dayNumber++;\n    if (dayNumber > daysInCurrentMonth) {\n      dayNumber = 1;\n      break;\n    }\n  }\n\n  for (let i = dayNumber; dateArray.length < 42; i++) {\n    dateArray.push({\n      day: dayNumber,\n      dayId: `${currentMonthOffset + 1}${dayNumber}`,\n    });\n    dayNumber++;\n  }\n\n  function splitArray(array) {\n    let arrayOfArrays = [];\n    while (array.length > 0) {\n      let arrayElement = array.splice(0, 7);\n      arrayOfArrays.push(arrayElement);\n    }\n    return arrayOfArrays;\n  }\n\n  dateArray = splitArray(dateArray);\n  return dateArray;\n}\n\n// let testDay = 23;\n// let testMonth = 4;\n// let testYear = 2020;\n// let x = getCurrentMonth(testYear, testMonth, testDay);\n// let y = getDateArray(testMonth, testYear);\n\n// export const visableDaysArray = {\n//   testArray: y,\n//   testMonthValue: x,\n// };\n\n// export default visableDaysArray;\n",{"ruleId":"34","severity":1,"message":"35","line":1,"column":17,"nodeType":"36","messageId":"37","endLine":1,"endColumn":25},{"ruleId":"34","severity":1,"message":"38","line":12,"column":9,"nodeType":"36","messageId":"37","endLine":12,"endColumn":21},{"ruleId":"34","severity":1,"message":"39","line":5,"column":9,"nodeType":"36","messageId":"37","endLine":5,"endColumn":20},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'shiftEntries' is assigned a value but never used.","'currentYear' is assigned a value but never used."]